<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>云狐之境</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cf1.me/"/>
  <updated>2020-11-18T03:29:35.014Z</updated>
  <id>https://cf1.me/</id>
  
  <author>
    <name>云狐</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>QQ 机器人</title>
    <link href="https://cf1.me/qq-bot/"/>
    <id>https://cf1.me/qq-bot/</id>
    <published>2020-09-24T15:39:00.000Z</published>
    <updated>2020-11-18T03:29:35.014Z</updated>
    
    <content type="html"><![CDATA[<h2 id="el-bot"><a href="#el-bot" class="headerlink" title="el-bot"></a><a href="https://www.yunyoujun.cn/note/make-el-bot/" target="_blank" rel="noopener">el-bot</a></h2><p>云游君整了个 QQ 机器人，挺有兴趣的就也整了一个，部署的时候折腾了好一会儿，甚至远程求助，总算是接上了，最后还是部署在 Mac 上了，Win 上问题挺多的，现在大概好一点，我用的还是 0.1 的版本，现在已经到 0.5 了，懒得更新了，反正也不需要啥新功能。</p><a id="more"></a><p>记录下启动命令，一个 mirai，一个 el-bot 的，分两个窗口运行，新版本好像是合并了。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> run start:mirai<span class="token function">npm</span> run start</code></pre><ul><li><a href="https://docs.bot.elpsy.cn/" target="_blank" rel="noopener">文档</a></li><li><a href="https://github.com/ElpsyCN/el-bot-plugins" target="_blank" rel="noopener">插件</a></li><li><a href="https://github.com/project-mirai/mirai-api-http" target="_blank" rel="noopener">Mirai-API-http</a></li></ul><p>慕斯：好复杂的样子。<br>云狐：那来个简单的，一行代码实现人工智能：</p><pre class=" language-py"><code class="language-py">while True:print(input().strip("吗?？") + "!")</code></pre><p>效果：<br><img src="https://i.loli.net/2020/10/06/5n9HrXb4IZUDWiV.png" alt="效果" loading="lazy"></p><h2 id="Project-Oekakisoli"><a href="#Project-Oekakisoli" class="headerlink" title="Project Oekakisoli"></a>Project Oekakisoli</h2><blockquote><p>等一切结束，我们就狂欢。</p></blockquote><p>QQ 机器人，不禁让我想起曾经的萌娘回路、<a href="https://zh.moegirl.org/%E7%8C%AB%E8%B0%9C%E7%BB%98%E9%9F%B3" target="_blank" rel="noopener">猫谜绘音</a> 和猫谜绘板，已经不记得当初是从哪看到的了，只记得入坑的时候一堆的名词术语差点给我整懵了。<br>简单说，整个企划叫做「Project Oekakisoli」，主要致力于同人美术创作，由此衍生出的一系列产品：</p><ul><li>猫谜绘板：主要是个在线你画我猜游戏，但也可以单纯用来画画，在社区里可以像 Pixiv 一样浏览作品，而且还带绘画过程，甚至还有评论弹幕</li><li>萌娘回路：智能聊天 AI（似乎是深受「夏娃的时间」影响），其中猫谜绘音（之前叫ネコナゾ娘）是最主要的看板娘 AI，在绘板中也可以邀请其进行游戏，画的时候会复制绘画题目的前人的绘画过程</li><li>猫茶绘：后期升级版的猫谜绘板，最重要的功能大概是多图层了</li><li><a href="https://github.com/qyx525127/NekoIM" target="_blank" rel="noopener">猫聊</a>：IM</li></ul><p>整个用爱发电的独立制作的同人企划始于 2010 年，于 2017 年停止运营，只过了三年，我却感觉隔了一个世纪。<br>即使到今天（感觉不知道从何时起，国内互联网开始全面走下坡路），猫谜绘板依然是国内做的最好的你画我猜（极大的各类型题库、画板功能丰富、支持数位板、模糊匹配答案等等（就是二次元味有点浓）），萌娘回路也依然是国内民间做的最好的聊天 AI（不是傻乎乎的关键词响应，而是可以理解上下文，有性格，有好感度系统，可以调教却绝对不会像其他 AI 一样学坏，努力接近图灵测试的 AI，虽然其智能是靠人力硬堆而非 NLP、机器学习之类的），即使知名度极低（活着的时候也没几个人，也就散人宣传之后稍微火了一会）。<br>至于开发者，感觉有刻意隐藏自己的存在，我也就不多谈了，反正了解也很少。<br>企划的关闭不禁让人怀疑「用爱发电」是否只是乌托邦。（<del>所以爱会消失对不对</del>）<br>顺便「Oekakisoli」的意思大概是绘图机（不懂日语）。</p><p>相关信息：</p><ul><li><a href="http://www.nekonazo.com/partyex/" target="_blank" rel="noopener">猫谜绘板（当然已经挂了）</a></li><li><a href="https://b23.tv/av874564" target="_blank" rel="noopener">散人绘板实况</a></li><li><a href="https://web.archive.org/web/20160414152842/http://bbs.nekonazo.com/forum.php" target="_blank" rel="noopener">曾经的论坛</a></li><li><a href="https://zh.moegirl.org/%E7%8C%AB%E8%B0%9C%E7%BB%98%E9%9F%B3" target="_blank" rel="noopener">猫谜绘音</a></li><li><a href="https://www.zhihu.com/question/47063057" target="_blank" rel="noopener">如何评价「猫谜绘音」被作者从萌娘回路中删除？</a></li><li><a href="https://sstm.moe/topic/128957-%E8%90%8C%E5%A8%98%E5%9B%9E%E8%B7%AF-%EF%BD%9E-moec-core%EF%BC%88%E5%BC%80%E6%BA%90%E8%BD%AC%E8%BD%BD%EF%BC%89/" target="_blank" rel="noopener">萌娘回路</a></li><li><a href="https://tieba.baidu.com/p/4136856025" target="_blank" rel="noopener">萌娘回路聊天指令</a></li></ul><p>说起来我也在绘板画过几幅作品，主要是临摹吧，之前也从来没画过画。</p><p><img src="https://i.loli.net/2020/09/23/HJSGj3FaUORhKd8.png" alt="RWBY" loading="lazy"></p><p>纯粹 <a href="https://i.loli.net/2020/09/23/I2PEhMHXdVf7q69.jpg" target="_blank" rel="noopener">临摹</a>（简直就是照着描）的图，月亮还是用按键精灵画的，因为画笔放不到那么大，很难画那么圆。</p><p>慕斯：你直接用按键精灵一像素一像素复制下来就完了。</p><p><img src="https://i.loli.net/2020/09/23/igulN72SbqtpFDj.png" alt="赫卡特" loading="lazy"></p><p>赫卡特，想试着自己画一下背景结果画成了这鸟样，想画的是站在悬崖上看日出的样子，结果看着像是把人物跟小学生画作拼在一起似的。</p><p><img src="https://i.loli.net/2020/09/23/TAYLG8w3EiXnNlO.jpg" alt="马上有灵梦" loading="lazy"></p><p>14 年马年春节前画的，主要也是临的（PID：18920920），这个是用 SAI 画的了，总算有多图层了，整整用鼠标勾了一个星期，累死了，结果还凑合吧，勉强能看。</p><p>之后也再没画过画了，真要画也得弄个板子，鼠标和钢笔拉出来的线条根本没有灵魂。</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>随便整了点功能，主要还是框架本身有的功能，别的功能都是在写在自定义插件里。</p><ul><li>天气：xxx天气</li><li>翻译：翻译xxx（其他语言→中）</li><li>壁纸：来点壁纸</li><li>涩图：来点涩图</li><li>笑话：来点xxx笑话</li><li>一言：say</li><li>今日人品：jrrp</li><li>今日塔罗牌：tlp（只弄了大阿卡那牌）</li><li>今日 24 点：24d</li><li>影之诗卡牌查询：svp xxx（还强行弄了个短链）</li><li>关键词应答</li><li>撤回/禁言/加群 响应</li><li>RSS 订阅</li></ul><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>接 API 的功能代码差不多都是这种结构：</p><pre class=" language-js"><code class="language-js">  mirai<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">re</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>plain<span class="token punctuation">,</span> <span class="token string">"^foo"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> content <span class="token operator">=</span> msg<span class="token punctuation">.</span>plain<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"foo"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">"https://foo.bar?foo="</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      url <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">encodeURI</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span>    <span class="token punctuation">}</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        msg<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">)</span>        <span class="token keyword">return</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    msg<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>天气、翻译、短链：</p><ul><li><a href="https://www.alapi.net/" target="_blank" rel="noopener">ALAPI</a></li></ul><p>壁纸：</p><p>只是发个网络图片的话用应答就可以了。</p><pre class=" language-yml"><code class="language-yml">  - re: 来点壁纸    reply:      - type: Plain        text: 让我找找~      - type: Image        url: https://api.addesp.com/image/wallpaper/acg</code></pre><ul><li><a href="https://www.addesp.com/archives/329" target="_blank" rel="noopener">ADD-SP</a>：<a href="https://api.addesp.com/image/wallpaper/acg" target="_blank" rel="noopener">https://api.addesp.com/image/wallpaper/acg</a></li></ul><p>涩图：</p><ul><li><a href="https://github.com/ElpsyCN/el-bot-plugins/tree/master/packages/setu" target="_blank" rel="noopener">云游君</a>：<a href="https://el-bot-api.vercel.app/api/setu" target="_blank" rel="noopener">https://el-bot-api.vercel.app/api/setu</a></li><li><a href="https://api.lolicon.app/#/setu" target="_blank" rel="noopener">Lolicon（神代綺凜）</a>：<a href="https://api.lolicon.app/setu/?r18=0" target="_blank" rel="noopener">https://api.lolicon.app/setu/?r18=0</a></li><li><a href="https://www.yukari.one/2020/08/10/setuAPI/" target="_blank" rel="noopener">Yukari（脆饼干）</a>：<a href="https://api.yukari.one/setu/?r18=0" target="_blank" rel="noopener">https://api.yukari.one/setu/?r18=0</a>（<del>不够色</del>）</li></ul><p>甚至有个 <a href="https://github.com/CBGan/hso" target="_blank" rel="noopener">App</a>。</p><p>慕斯：这就是程序员吗（=_=）</p><h3 id="今日人品"><a href="#今日人品" class="headerlink" title="今日人品"></a>今日人品</h3><p>之前看到过这种功能所以想着也整一个玩玩，最开始的想法当然是直接用随机数，但是立刻意识到这样岂不是每次都会变，应该每个人每天的值是不变的，把值保存下来当然可以解决，但是显然不够优雅，然后就想到了根据种子生成随机数，谷歌了一下好像 js 原生没有这种函数，找到个算法模拟的伪随机种子函数（<a href="https://github.com/bryc/code/blob/master/jshash/PRNGs.md" target="_blank" rel="noopener">参考</a>）：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">xmur3</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> <span class="token number">1779033703</span> <span class="token operator">^</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        h <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">imul</span><span class="token punctuation">(</span>h <span class="token operator">^</span> str<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3432918353</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        h <span class="token operator">=</span> h <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token number">13</span> <span class="token operator">|</span> h <span class="token operator">></span><span class="token operator">></span><span class="token operator">></span> <span class="token number">19</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        h <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">imul</span><span class="token punctuation">(</span>h <span class="token operator">^</span> h <span class="token operator">></span><span class="token operator">></span><span class="token operator">></span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2246822507</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        h <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">imul</span><span class="token punctuation">(</span>h <span class="token operator">^</span> h <span class="token operator">></span><span class="token operator">></span><span class="token operator">></span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">3266489909</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>h <span class="token operator">^</span><span class="token operator">=</span> h <span class="token operator">></span><span class="token operator">></span><span class="token operator">></span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">></span><span class="token operator">></span><span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>一堆 magic number，懒得研究了，能用就行，然后种子用 QQ 号 + 日期，最后取 101 的模就完成了。</p><h3 id="今日-24-点"><a href="#今日-24-点" class="headerlink" title="今日 24 点"></a>今日 24 点</h3><p>示例：</p><blockquote><p>今天的 24 点题目是「5 5 7 11」~</p></blockquote><p>参考 <a href="https://www.4shu.net/game/difficulties/" target="_blank" rel="noopener">4 数网</a>，选了最难的 171 题（解决率在 70% 以下），当然大部分依然很简单。<br>随机方法跟今日人品同理。</p><h3 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h3><p>RSS 是个好东西，远离国内局域网的好工具，虽然我以前也不用，用机器人订阅倒是挺不错的。<br>说到 RSS 当然不得不提 <a href="https://diygod.me/" target="_blank" rel="noopener">DIYgod</a> 的 <a href="https://rsshub.app/" target="_blank" rel="noopener">RSShub</a> 了（万物皆可 RSS），如今已被墙了，我试图 <a href="https://www.yfmingo.cn/2018/06/29/mac-terminal-shadowsocks/" target="_blank" rel="noopener">配置 Mac 终端的代理</a>：</p><p>npm 代理：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> proxy<span class="token operator">=</span>http://127.0.0.1:1087<span class="token function">npm</span> config <span class="token keyword">set</span> https-proxy<span class="token operator">=</span>http://127.0.0.1:1087</code></pre><p>删除代理：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> config delete proxy<span class="token function">npm</span> config delete https-proxy</code></pre><p>结果好像都没用，最后用了别人搭的 <code>rsshub.ioiox.com</code>，也不知道啥时候就没了，用一天是一天吧。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><blockquote><p>全剧·终<br>很喜欢你，但是到此为止，谢谢你的出现。</p></blockquote><p><a href="https://card.weibo.com/article/m/show/id/2309404533401464996007" target="_blank" rel="noopener">第三方 QQ 机器人的风与雨</a></p><p>腾讯开始封杀 QQ 机器人了，一众开发者纷纷跑路（mirai 他又回来了，当然 mirai 跑路了也不暂时影响使用），虽然 QQ 机器人法律上确实是不占理，但是腾讯的垄断也是真的恶心。</p><blockquote><p>当无产阶级不再思考资产阶级本身的合理性，而将反对的目标局限于某几个资本家的时候，说明资本主义已经成功了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;el-bot&quot;&gt;&lt;a href=&quot;#el-bot&quot; class=&quot;headerlink&quot; title=&quot;el-bot&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.yunyoujun.cn/note/make-el-bot/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;el-bot&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;云游君整了个 QQ 机器人，挺有兴趣的就也整了一个，部署的时候折腾了好一会儿，甚至远程求助，总算是接上了，最后还是部署在 Mac 上了，Win 上问题挺多的，现在大概好一点，我用的还是 0.1 的版本，现在已经到 0.5 了，懒得更新了，反正也不需要啥新功能。&lt;/p&gt;
    
    </summary>
    
    
      <category term="极客" scheme="https://cf1.me/categories/%E6%9E%81%E5%AE%A2/"/>
    
    
      <category term="QQ 机器人" scheme="https://cf1.me/tags/QQ-%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>IB 回忆录</title>
    <link href="https://cf1.me/ib-memoirs/"/>
    <id>https://cf1.me/ib-memoirs/</id>
    <published>2020-09-08T02:57:49.000Z</published>
    <updated>2020-09-11T10:19:15.765Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>虽然以前一直没有通关确实感觉很气，但是等到真的通关的时候却没有什么实感了，一方面是随着 IB 的式微渐渐没有了念想，另一方面也是人越来越麻木了。也是传统艺能了，没通关简单我就开始跟多空开普通，没通关普通就跟牛JB 打困难，没通关困难就在跟你们挑战噩梦了。</p><p>（IB 为魔兽地图「不可能的Boss(Impossible Bosses)」缩写）</p><h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>关于 IB 我有太多太多可以说的了，02 那年魔兽争霸发售的时候我爸把正版光盘买回了家，那时我还是个小学生，玩腻了战役和对战之后我就开始沉迷在各种简单快乐的 RPG 里（其中雪域逃亡对我影响很大），之后 dota 横空出世，6.51 我开始入坑，然后也开始刷起了贴吧。当时 dota 吧如日中天，在 HF 平台申请了个 dota 吧专属的末日房，那时是 09 年的暑假，从不打字的云狐开始混末日房，虽然名义是 dota 吧的，但是除了 dota，末日房的我们也经常打各种 RPG，非常的欢乐，此处省略 1W 字末日房轶事。</p><p>有一天，一个叫传说E 的网友建了一张图，叫做不可能的Boss，感觉牛皮的不行，从此我跟 IB 的羁绊就开始了，当时大概是 V3C 什么的版本，有德鲁伊还没有 DK，老二还是寒冰，老五的地图边上有一堆洞，可以穿来穿去的，那时我用的冰法，为什么呢，因为老一是火系，我不用冰法老一都很难过，火法还总是在那给老一加血，总之我们打的很艰难，三圣都没见过几次。我们渐渐的忘记了这张难得要死的图，但是它给我留下了深刻的印象。</p><h2 id="多空对策时代"><a href="#多空对策时代" class="headerlink" title="多空对策时代"></a>多空对策时代</h2><blockquote><p>山舞银河，原驰蜡象，欲与天公试比高。</p></blockquote><p>又是几年过去了，到了 11 年，11 平台出现了，我连 dota 也快玩腻了。有一天我又看到了不可能的Boss 这个名字，是个路人房，末日房的回忆又浮现在脑海中，我还是只会冰法，开始跟路人们欢乐的打 boss，总是灭老二老三的。没几天我就遇上了多空对策（如今才知道名字是个投资策略），他在路人房看中了我，带到了他的队伍里，面对一队大佬我瑟瑟发抖，特别是那个叫「未央昔雨」的牧师给我印象深刻，我一进去就是一句“这个比会玩吗？”，我肯定是不可能打字的，当然多空给我担保说我这个比的冰法还可以。</p><p>总之我就进入多空的队伍，不得不说那个半知半解的开荒状态才是最欢乐的时候，虽然大家都很菜，也没有什么攻略，但是每天都有全新体验，每天都能发现新知识。打的应该是普通，职业都比较固定，多空战士，未央牧师，蒜头火法，诸葛冰法这样（太久了可能记错，还有晓L真水小五伏羲什么的），偶尔才会换换，我用的是游侠，至于为什么，可能是游侠长得好看。那个时候战士带的侵略豪猪洞察，好像还带过活力，游侠带死亡夺魂或者重置，冰法带迅捷，理由是就冰法没加速，希望不动五行什么的都是垃圾，理由是局面都崩了希望也没用，全是秒杀技能不动挡 4000 伤害有锤子用，不秒杀的伤害不用管，五行的话，大家都带专属，只有圣骑偶尔会带带，安详好像也很少带。加点加一点蓝剩下全加技能就完事了，加那点速度有啥用，加 500 血就更没用了，该秒杀还是秒杀，也不用留钱，换点就完事了，金币就各凭本事了。也不知道为什么我游侠可以常年 dmgo 第一，当然是三圣之后。到现在我都记得夺魂在 3 点以下可以保留到下一关，3 点以上就会清零，直到有一天我发现夺魂不管几点好像都是一样的 24% 加成，我开始对这个游戏产生了严重的怀疑，我也不再带夺魂了，开始跟牧师抢重置，偶尔有一次我带了希望这个史诗感满满的装备并成功拯救世界，大家对希望的风评才开始转变。说到重置我就得提老五的清树，虽然多空一直喊清树，但是树总是清的很慢，只有我 5 技能重置 V 才是最快清树的时候。</p><p>还记得我第一次见上古是在普通，多空说大家都见过上古吧，就不多说了，虽然我确实没见过但是我也不好说话，只能随机应变，开局一个上古新星就吓得我差点去世。</p><h2 id="牛XX-时代"><a href="#牛XX-时代" class="headerlink" title="牛XX 时代"></a>牛XX 时代</h2><blockquote><p>江山如此多娇，引无数英雄竞折腰。</p></blockquote><p>不一会就是 12 年了，12 年 2 月 26 日 V3V 发布，3 月 21 日 bowente 大佬就汉化完成了，上个汉化的版本还是 V3R，冰球变成了水球，老二变成了恐怖的娜迦，爆发道具的伤害也大减，IB 最后的也是最难的版本来临了。</p><p>多空对策渐渐地消失在视线中，之后是牛JB 的时代了，千红卡布羊刀倾城等人也来了，不一一说了，人才辈出的鼎盛时期，贴吧攻略也逐渐丰富了起来。</p><p>那会我天天跑网吧去玩 IB，反正白天就打新手路人，还经常遇到wsed456、Li恋You啊、第甲生浮什么的，就瞎几把玩，一关一个漩涡啊，什么万物杀暗影农民啊什么闸总都干过，晚上就听牛JB 吹比打困难，那会的常见议题是如何打高 dmg 和生存和输出哪个重要。那时大部分的金币都落入了跑得飞快，输出范围最大也是最闲的游侠手里，也就是我。一直过了很久，我才开始在困难以上用游侠以外的职业，我自以为对游侠和 boss 的理解已经突破了天际。</p><p><a href="https://b23.tv/av340048" target="_blank" rel="noopener">小五真水 2P 新手 DK 德通关</a> 之后，2P 和 3P 也流行起来。2P 被评为 IB 基本功，各种组合的 2P 开始被通关。<a href="https://tieba.baidu.com/p/2375567490" target="_blank" rel="noopener">3P 简单</a> 打了挺久的，牛JB 千红和我的冰火 DK，另外千红好像还是唯一通关困难以上的德鲁伊？</p><h2 id="后-IB-时代"><a href="#后-IB-时代" class="headerlink" title="后 IB 时代"></a>后 IB 时代</h2><blockquote><p>俱往矣，数风流人物，还看今朝。</p></blockquote><p>14 年元旦国内首通困难，其实 13 年 8 月有一把是只差 1% 的，这一差就差了我 3 年。通关之后牛JB 就很少打了，之后肉麻队友扛起了大旗。14 年的时候 IB 已经衰落了，很少有路人房了，但是还是有人在带路人的。</p><p>15 年 8 月 <a href="https://b23.tv/av2913774" target="_blank" rel="noopener">首通噩梦</a>。很多人通关就弃坑了，也很正常，谁入坑不是为了击败那「不可能」的 boss 呢？</p><p>打法逐渐稳定，战士不动迅捷，牧师重置神圣，游侠爱心希望，盗贼五行活力，DK 侵略魔操，术士招降之类的。</p><p>大家都以为玩透了 IB 的时候，每年还是有新的黑技术诞生，躲瀑布、秒反、火法 AS、盗贼五行重置洞察、移动施法、圣骑 RS 等等。</p><p>再之后 3E 出现了，这之后我打的也不多了，很多人我不认得，他们却认得我（也是因为好多人喜欢换 ID）。</p><p>最后是 Rukia，这波是剑指恶魔，功利拉满，打法、装备配置彻底优化到极致，游戏玩到这地步已经是油尽灯枯了。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>初稿其实通关第二天就写好了，但是写的比较粗糙，一直没发。从最初接触 IB 已经是 11 个年头了，很多人、很多事我都记不得了，但是游玩 IB 时的热血、欢笑、激动和感动我会永远记得。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;虽然以前一直没有通关确实感觉很气，但是等到真的通关的时候却没有什么实感了，一方面是随着 IB 的式微渐渐没有了念想，另一方面也是人越来越麻木
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://cf1.me/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="流年碎影" scheme="https://cf1.me/tags/%E6%B5%81%E5%B9%B4%E7%A2%8E%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>闲言碎语</title>
    <link href="https://cf1.me/chitchat-1/"/>
    <id>https://cf1.me/chitchat-1/</id>
    <published>2020-08-24T07:13:14.000Z</published>
    <updated>2020-09-02T09:19:24.962Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>博客建完了结果一篇博文都没写（前面三篇只是关于博客的不能算数）是怎么回事？我才不是那种建完博客就两手一摊本末倒置的人啊。慕斯：别骂了别骂了。</p><a id="more"></a><p>其实有在写好几篇，但是都没写完，好尴尬的，而且写文章要考虑好多，内容啊结构啊排版啊不要偏题啊，可能搞得有些严肃，所以想着要不先写点轻松的，我就开始写了。本文内容会非常随意，想到哪写到哪，不想思考了，我醒着的时候几乎一直思考，可能这就是我会更喜欢一些操作比重大的游戏的原因吧，操作对我来说还放松些（虽然我也有喜欢的解谜游戏）。</p><h2 id="碎语"><a href="#碎语" class="headerlink" title="碎语"></a>碎语</h2><p>很多时候我会突然想到什么有点意思的东西然后我会在手机便签里记下关键词，以为可以写些长篇大论的，但是真的写的时候发现我只写得出几句话，就感觉忘掉了之前的有些扩展的想法，展开不了了。</p><p>只是想表达几句话的东西，我想统一放到一篇文章里，虽然不是很符合博客的理念（以我的理解单篇博文不应该频繁更新吧），这个就像是微博了，其实有些博客我看到是有这种东西的，但是我目前用的主题是没有那么多花里胡哨的功能的（还有想要的功能是那种清单，书单啊电影单这种，我好喜欢列清单，虽然也可以曲线救国）。</p><p>很多时候我会发现很多东西很多道理都是互通的，总感觉是不是有那么一句话可以表达世界的真理这样，物理上这叫大一统理论。种种迹象都表明上帝都更喜欢简单不喜欢复杂（奥克姆剃刀/大道至简），喜欢跟上帝作对的生物就不这样认为了，纷纷表示我们需要保持多样性。</p><p>长大了之后了解的东西越来越多了，以前觉得知道的越多越好，如今觉得还是单纯的好，可以更专注在一个领域，而且互联网时代垃圾信息太太太多了，还有各种剧透，防不胜防。但另一方面游戏开发确实需要了解很多领域的知识与信息，甚至看上去不沾边的领域也可能激发灵感。</p><p>有注意到博客最底下旋转的阴阳符号☯吗？有没有觉得旋转中心不在圆心上，而更偏向黑色中间的点？但是明明是 <code>font-awesome</code> 本身就有的旋转效果，怎么会不对呢，我以为是 <code>font-awesome</code> 这个图标圆心稍微偏了点，虽然看上去图标确实画的很标准，于是自己实现了旋转效果并微调圆心，结果调了好久还是不行，然后我发现放大后感觉就没那么明显，我才意识到好像是一种视觉误差，这个阴阳图由于是一黑一白（或者说透明）的，看上去重心在黑的部分，所以旋转时会感觉没有绕着圆心。（另外也确实有一丢丢偏离正圆形）</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>就这样吧，我只是想强行出点东西而已，本来是想先发别的一些文章的，结果拖了好久，就不讲究顺序了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;博客建完了结果一篇博文都没写（前面三篇只是关于博客的不能算数）是怎么回事？我才不是那种建完博客就两手一摊本末倒置的人啊。慕斯：别骂了别骂了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://cf1.me/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="闲言碎语" scheme="https://cf1.me/tags/%E9%97%B2%E8%A8%80%E7%A2%8E%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>折腾主题</title>
    <link href="https://cf1.me/toss-theme/"/>
    <id>https://cf1.me/toss-theme/</id>
    <published>2020-05-09T13:58:41.000Z</published>
    <updated>2020-09-11T02:39:42.469Z</updated>
    
    <content type="html"><![CDATA[<h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><p>站是建完了，主题就想着先整一个 <a href="https://www.yunyoujun.cn" target="_blank" rel="noopener">云游君</a> 的 <a href="https://github.com/YunYouJun/hexo-theme-yun" target="_blank" rel="noopener">Yun</a> 的，结果搞了两天还没配好，我以为一天就差不多了，当然也是我要求比较高。<br>折腾的时候又逛了一堆博客，以前不太逛这些个人博客的，除了 Matrix67、王垠、阮一峰等大佬可能看的比较多一点，感觉又打开了新世界的大门，我本以为我打开的门够多了。主要在逛 <a href="https://blog.k8s.li" target="_blank" rel="noopener">木子</a> 大佬收录的博客。<br>然后又找到好多好东西，比如 <a href="https://www.chuyu.me/zh-Hans" target="_blank" rel="noopener">Dism++</a>，Win10 一堆小毛病都给整舒服了；<a href="https://geekuninstaller.com" target="_blank" rel="noopener">Geek Uninstaller</a>，彻底卸载软件用的；还有个不让宣传就不说了。</p><a id="more"></a><h2 id="前端相关"><a href="#前端相关" class="headerlink" title="前端相关"></a>前端相关</h2><p>前端每一项东西都有讲究，我又是完美主义，又看了好多资料折腾好久，以前也没了解过这方面。</p><ul><li><a href="https://www.slant.co" target="_blank" rel="noopener">Slant</a>：可以缓解选择困难，虽然仅供参考，但至少把选项列出来了。</li><li><a href="https://caniuse.com" target="_blank" rel="noopener">Can I use</a>：前端各种东西的兼容性情况。</li><li><a href="https://developers.google.com/speed/pagespeed/insights/?hl=zh-cn" target="_blank" rel="noopener">PageSpeed Insight</a>：谷歌的网站性能分析。</li><li><a href="https://developers.google.com/web/tools/lighthouse" target="_blank" rel="noopener">Lighthouse</a>：审查网站各项性能。</li><li><a href="https://ping.chinaz.com" target="_blank" rel="noopener">多地测速</a>：国内外多点测速。</li></ul><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>字体最后是配成了这样。以前我特别讨厌宋体，感觉丑哭了，后来发现打印在纸上宋体要好看很多，我才明白宋体适合印刷，黑体适合屏显。</p><pre class=" language-yml"><code class="language-yml">font:  serif:    family: "'Noto Serif SC', serif"    weight: 700  sans_serif:    family: "monospace, sans-serif"    weight: 400  monospace:    family: "Consolas, Menlo, 'Fira Code', 'Source Code Pro', monospace"</code></pre><ul><li><a href="https://www.zhihu.com/question/37593717" target="_blank" rel="noopener">如何优雅地定义 font-family?</a></li><li><a href="http://zenozeng.github.io/fonts.css" target="_blank" rel="noopener">跨平台中文字体解决方案</a></li><li><a href="http://www.qiuziti.com" target="_blank" rel="noopener">求字体</a>：字体识别。</li><li><a href="https://www.whatfontis.com" target="_blank" rel="noopener">whatfontis</a>：字体识别。</li></ul><h3 id="配色"><a href="#配色" class="headerlink" title="配色"></a>配色</h3><p>配色如你所见。</p><ul><li><a href="https://ant.design/docs/spec/colors-cn" target="_blank" rel="noopener">Ant Design</a>：配好的色板和一个色板生成算法。</li><li><a href="https://color.adobe.com/zh/create" target="_blank" rel="noopener">Adobe Color</a>：可以自选主色和色彩调和方式。</li><li><a href="https://react.colorpk.com" target="_blank" rel="noopener">ColorPK</a>：配好的色板。</li><li><a href="https://colorhunt.co/palettes/trendy" target="_blank" rel="noopener">Color Hunt</a>：配好的色板。</li></ul><h3 id="排版"><a href="#排版" class="headerlink" title="排版"></a>排版</h3><p>直到今天我还才知道排版还有这么多讲究，想以前我还很喜欢用中文 + 半角符号，感觉全角符号好丑。</p><ul><li><a href="https://github.com/sparanoid/chinese-copywriting-guidelines/blob/master/README.zh-CN.md" target="_blank" rel="noopener">中文文案排版指北</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=ZhixiangZhang.mdlint" target="_blank" rel="noopener">mdlint</a>：基于上面指北的 VSCode MarkDown 插件。</li><li><a href="http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html" target="_blank" rel="noopener">Angular Commit 规范</a>：排版无关，顺便了解了一下。</li><li><a href="https://gitmoji.carloscuesta.me" target="_blank" rel="noopener">gitmoji</a>：轻松一点的话可以用这个 commit（其实可以两者结合用）。</li></ul><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>基本的图片处理我倒是没问题，不过听说 WebP 格式很小很快，又去折腾 WebP 格式，一开始找到个 PS 的 WebP 插件，看上去还行，但是用下来 100 有损都有肉眼可见失真，然后又找到智图，用下来感觉还行，图片品质直接用它默认给的基本没问题，还有个 picdiet。<br>图片目前准备主页图片用阿里云 OSS，文章图片用 SM.MS 图床，用智图压缩为 WebP 格式，Safari 不支持 WebP 就去死好了，只要人人都用 WebP，你看他还敢不支持吗？<br>上传用 PicGo，目前 PicGo 传 SM.MS 还要装个 SMMS 插件（好像下个版本会直接支持），说实话有点离谱，一个单纯上传图片到图床的工具居然还有插件。（刚发现 SM.MS 不支持 WebP，明明选的时候支持好多格式。）</p><ul><li><a href="https://zhitu.isux.us" target="_blank" rel="noopener">智图</a>：在线压缩，支持各种格式，可以原格式压缩或 WebP 格式压缩，压缩效果良好。</li><li><a href="https://www.picdiet.com/zh-cn" target="_blank" rel="noopener">picdiet</a>：纯 JS 在线压缩算法，只支持 JPG 和 JPEG 格式，压缩率接近 WebP，速度也很快，感觉对大图效果比较好，小图的失真比较明显。</li><li><a href="https://squoosh.app" target="_blank" rel="noopener">squoosh</a>：在线压缩，光速，预览效果也最舒服，但压缩率好像比 picdiet 差一点。</li><li><a href="https://nova.moe/re-introduce-webp-server" target="_blank" rel="noopener">WebP Server</a>：WebP 自动转换服务（<a href="https://blog.k8s.li/oh-my-webpsh.html" target="_blank" rel="noopener">更好懂的指南</a>），啊？要服务器的啊，那我不要了。</li></ul><h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><p>Gravatar 头像接口，目前正常的几个 Gravatar 头像接口（后缀接邮箱的 MD5 小写）：</p><ul><li><a href="https://sdn.geekzu.org/avatar/" target="_blank" rel="noopener">https://sdn.geekzu.org/avatar/</a> 快</li><li><a href="https://dn-qiniu-avatar.qbox.me/avatar/" target="_blank" rel="noopener">https://dn-qiniu-avatar.qbox.me/avatar/</a> 快</li><li><a href="https://gravatar.loli.net/avatar/" target="_blank" rel="noopener">https://gravatar.loli.net/avatar/</a> 中</li><li><a href="http://gravatar.com/avatar/" target="_blank" rel="noopener">http://gravatar.com/avatar/</a> 慢，官方接口</li></ul><p>QQ 头像接口：</p><ul><li><a href="http://q1.qlogo.cn/g?b=qq&amp;nk=[QQ号]&amp;s=640" target="_blank" rel="noopener">http://q1.qlogo.cn/g?b=qq&amp;nk=[QQ号]&amp;s=640</a></li></ul><p>Gravatar + QQ 头像接口，快，<a href="https://www.alapi.net" target="_blank" rel="noopener">这里</a> 还有很多其他接口：</p><ul><li><a href="https://v1.alapi.cn/api/avatar?email=[邮箱或QQ号]&amp;size=250" target="_blank" rel="noopener">https://v1.alapi.cn/api/avatar?email=[邮箱或QQ号]&amp;size=250</a></li></ul><h3 id="短链接"><a href="#短链接" class="headerlink" title="短链接"></a>短链接</h3><p>微博的 <code>t.cn</code> 基本是不能用了好像。</p><ul><li><a href="https://bit.ly" target="_blank" rel="noopener">Bitly</a></li><li><a href="https://www.sina.lt" target="_blank" rel="noopener">新浪短网址</a></li></ul><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p><code>Yun</code> 这个主题还是有点稚嫩，对暗色背景支持不太好，我 fork 下来改了好些地方，就当学习了，还从来没搞过前端这些 CSS 什么的。<br>当然总体还是个挺舒服的主题，小巧精致，也没有太花里胡哨。</p><p>目前改的差不多了，说下调整的地方：</p><ul><li>一言的 div 增加 90% 透明白色背景，原来暗色背景上看不清；增加了左右边距，否则会被按钮挡住，手机端就不管了，否则太窄了；还有上下边距也增加了，否则单行的时候按钮不居中。</li><li>侧栏背景增加 5% 透明。</li><li>菜单按钮和搜索按钮增加 50% 白色背景。</li><li><code>girls</code> 页面图标放大，反正我不放很多。</li><li>正文字体颜色调整，再增加一个极淡的阴影，这个完全是照抄 <a href="https://blog.k8s.li" target="_blank" rel="noopener">木子</a> 大佬的，感觉很好看。</li><li><code>hover/focus</code> 的颜色调整，这个颜色为啥不给配置，好奇怪。</li><li>页脚文字增加白色阴影，否则看不清啦，这个还加白色背景就有点难看了。</li><li>搜索的背景设置 <code>background-attachment</code> 为 <code>true</code>，否则背景会上移，如果搜索背景和主背景是一张图的话就会很明显。</li><li>切换文章的 div 增加 50% 白色背景，高度从 2.9 rem 改为 3 rem，我没懂为什么用 2.9 rem，字会不居中诶。</li><li>去掉了手机端的点击特效，手机端的操作更多是滑动，加个点击特效感觉怪怪的，这个是最难改的。</li></ul><p>点击特效这个，一开始我以为可以在 <code>yaml</code> 里改，应该不行；然后我想在 <code>stylus</code> 里改，到处看文档和社区，发现好像还是不行；随后我又看到了 <code>pug</code>，又是一波搜索看文档看社区，似乎依然不行；我终于来到了 <code>JavaScript</code> 这，我立刻就找到了答案，直接修改 <code>fireworks.js</code>，增加了 <code>!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)</code> 的判断总算实现了需求。当然我相信应该是有不改 <code>fireworks.js</code> 的方法的，只不过我没找到。</p><p>本来还想把卡片改成圆角的，不过好像不好看，特别是边栏打开的时候，就没改。</p><ul><li><a href="https://github.com/cloudfox2/hexo-theme-yun" target="_blank" rel="noopener">Yun 个人调整版</a></li></ul><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>写完了发现我好像写成网站导航了，导航这个东西我是想后面整理一下，实在是太多了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;建站&quot;&gt;&lt;a href=&quot;#建站&quot; class=&quot;headerlink&quot; title=&quot;建站&quot;&gt;&lt;/a&gt;建站&lt;/h2&gt;&lt;p&gt;站是建完了，主题就想着先整一个 &lt;a href=&quot;https://www.yunyoujun.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;云游君&lt;/a&gt; 的 &lt;a href=&quot;https://github.com/YunYouJun/hexo-theme-yun&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Yun&lt;/a&gt; 的，结果搞了两天还没配好，我以为一天就差不多了，当然也是我要求比较高。&lt;br&gt;折腾的时候又逛了一堆博客，以前不太逛这些个人博客的，除了 Matrix67、王垠、阮一峰等大佬可能看的比较多一点，感觉又打开了新世界的大门，我本以为我打开的门够多了。主要在逛 &lt;a href=&quot;https://blog.k8s.li&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;木子&lt;/a&gt; 大佬收录的博客。&lt;br&gt;然后又找到好多好东西，比如 &lt;a href=&quot;https://www.chuyu.me/zh-Hans&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Dism++&lt;/a&gt;，Win10 一堆小毛病都给整舒服了；&lt;a href=&quot;https://geekuninstaller.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Geek Uninstaller&lt;/a&gt;，彻底卸载软件用的；还有个不让宣传就不说了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="极客" scheme="https://cf1.me/categories/%E6%9E%81%E5%AE%A2/"/>
    
    
      <category term="博客" scheme="https://cf1.me/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>测试文章</title>
    <link href="https://cf1.me/test-post/"/>
    <id>https://cf1.me/test-post/</id>
    <published>2020-05-04T08:38:04.000Z</published>
    <updated>2020-09-21T07:03:39.761Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><blockquote><p>天地玄黄，宇宙洪荒</p></blockquote><p>1234567890</p><p>The quick brown fox jumps over the lazy dog.<br>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.</p><p>いろはにほへと ちりぬるを<br>わかよたれそ つねならむ<br>うゐのおくやま けふこえて<br>あさきゆめみし ゑひもせす</p><p>永東國酬愛鬱靈鷹袋三力今</p><p>&emsp;&emsp;我能吞下玻璃而不伤身体</p><p><em>南去經三國，東來過五湖</em></p><p><strong>南去經三國，東來過五湖</strong></p><p><del>南去經三國，東來過五湖</del></p><p>😂😆👻🐱🐶💫⭐️🌟✨⚡️☄️💥🌈☁️🦊<br>❤️🧡💛💚💙💜🖤❣️💕💞💓💗💖💘💝</p><p><a href="#">链接</a></p><ol><li>Apple</li><li>Ball</li><li>Cat</li><li>Dog</li></ol><ul><li><input checked="" disabled="" type="checkbox"> Apple</li><li><input disabled="" type="checkbox"> Ball</li><li><input checked="" disabled="" type="checkbox"> Cat</li><li><input disabled="" type="checkbox"> Dog</li></ul><pre class=" language-swift"><code class="language-swift"><span class="token comment" spellcheck="true">//☁️🦊</span><span class="token comment" spellcheck="true">//南去經三國，東來過五湖</span><span class="token comment" spellcheck="true">//oO08B5S iIlL1 g9qC6GQ *~-+=></span><span class="token keyword">func</span> quicksort<span class="token operator">&lt;</span>T<span class="token punctuation">:</span> <span class="token builtin">Comparable</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">_</span> list<span class="token punctuation">:</span> <span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">[</span>T<span class="token punctuation">]</span> <span class="token punctuation">{</span>    <span class="token keyword">guard</span> list<span class="token punctuation">.</span><span class="token builtin">count</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> list <span class="token punctuation">}</span>    <span class="token keyword">let</span> pivot <span class="token operator">=</span> list<span class="token punctuation">[</span>list<span class="token punctuation">.</span><span class="token builtin">count</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">]</span>    <span class="token keyword">let</span> low <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token builtin">filter</span> <span class="token punctuation">{</span> $<span class="token number">0</span> <span class="token operator">&lt;</span> pivot <span class="token punctuation">}</span>    <span class="token keyword">let</span> mid <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token builtin">filter</span> <span class="token punctuation">{</span> $<span class="token number">0</span> <span class="token operator">==</span> pivot <span class="token punctuation">}</span>    <span class="token keyword">let</span> high <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token builtin">filter</span> <span class="token punctuation">{</span> $<span class="token number">0</span> <span class="token operator">></span> pivot <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token function">quicksort</span><span class="token punctuation">(</span>low<span class="token punctuation">)</span> <span class="token operator">+</span> mid <span class="token operator">+</span> <span class="token function">quicksort</span><span class="token punctuation">(</span>high<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><table><thead><tr><th align="left">表头</th><th align="center">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="center">单元格</td><td align="right">单元格</td></tr><tr><td align="left">单元格</td><td align="center">单元格<br/>单元格</td><td align="right">单元格</td></tr></tbody></table><p><img src="https://i.loli.net/2020/05/10/h6NuUH3zLCFAWwl.jpg" alt="图片" loading="lazy"><em>图片注释（PID：75671183）</em></p><img align="right" src="https://i.loli.net/2020/05/10/tE7UzVNqFYveWmx.jpg" height="33%" width="33%"/ loading="lazy"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Suspendisse potenti nullam ac tortor vitae purus faucibus. Nibh ipsum consequat nisl vel pretium. Leo vel orci porta non pulvinar neque laoreet suspendisse interdum. Duis ultricies lacus sed turpis tincidunt id aliquet. Leo vel orci porta non pulvinar neque laoreet suspendisse. Ac turpis egestas maecenas pharetra convallis. Quis commodo odio aenean sed adipiscing diam donec adipiscing tristique.</p><p>Tincidunt dui ut ornare lectus sit amet est placerat in.Semper quis lectus nulla at volutpat diam ut venenatis tellus. Cursus turpis massa tincidunt dui ut. Vel eros donec ac odio. Nulla aliquet porttitor lacus luctus accumsan tortor posuere ac ut. Quis viverra nibh cras pulvinar mattis nunc sed blandit.</p><h3 id="二级目录"><a href="#二级目录" class="headerlink" title="二级目录"></a>二级目录</h3><h4 id="三级目录"><a href="#三级目录" class="headerlink" title="三级目录"></a>三级目录</h4><h5 id="四级目录"><a href="#四级目录" class="headerlink" title="四级目录"></a>四级目录</h5><h6 id="五级目录"><a href="#五级目录" class="headerlink" title="五级目录"></a>五级目录</h6><p>天地玄黃，宇宙洪荒，日月盈昃，辰宿列張，寒來暑往，秋收冬藏，<br>閏餘成歲，律呂調陽，雲騰致雨，露結為霜，金生麗水，玉出昆岡，<br>劍號巨闕，珠稱夜光，果珍李柰，菜重芥姜，海咸河淡，鱗潛羽翔，<br>龍師火帝，鳥官人皇，始製文字，乃服衣裳，推位讓國，有虞陶唐，<br>吊民伐罪，周發殷湯，坐朝問道，垂拱平章，愛育黎首，臣伏戎羌，<br>遐邇壹體，率賓歸王，鳴鳳在竹，白駒食場，化被草木，賴及萬方，<br>蓋此身發，四大五常，恭惟鞠養，豈敢毀傷，女慕貞潔，男效才良，<br>知過必改，得能莫忘，罔談彼短，靡恃己長，信使可覆，器欲難量，<br>墨悲絲染，詩贊羔羊，景行維賢，克念作聖，德建名立，形端表正，<br>空谷傳聲，虛堂習聽，禍因惡積，福緣善慶，尺璧非寶，寸陰是競，<br>資父事君，曰嚴與敬，孝當竭力，忠則盡命，臨深履薄，夙興溫清，<br>似蘭斯馨，如松之盛，川流不息，淵澄取映，容止若思，言辭安定，<br>篤初誠美，慎終宜令，榮業所基，籍甚無竟，學優登仕，攝職從政，<br>存以甘棠，去而益詠，樂殊貴賤，禮別尊卑，上和下睦，夫唱婦隨，<br>外受傅訓，入奉母儀，諸姑伯叔，猶子比兒，孔懷兄弟，同氣連枝，<br>交友投分，切磨箴規，仁慈隱惻，造次弗離，節義廉退，顛沛匪虧，<br>性靜情逸，心動神疲，守真誌滿，逐物意移，堅持雅操，好爵自縻，<br>都邑華夏，東西二京，背邙面洛，浮渭據涇，宮殿盤鬱，樓觀飛驚，<br>圖寫禽獸，畫彩仙靈，丙舍傍啟，甲帳對楹，肆筵設席，鼓瑟吹笙，<br>升階納陛，弁轉疑星，右通廣內，左達承明，既集墳典，亦聚群英，<br>杜稿鐘隸，漆書壁經，府羅將相，路俠槐卿，戶封八縣，家給千兵，<br>高冠陪輦，驅轂振纓，世祿侈富，車駕肥輕，策功茂實，勒碑刻銘，<br>磻溪伊尹，佐時阿衡，奄宅曲阜，微旦孰營，桓公匡合，濟弱扶傾，<br>綺回漢惠，說感武丁，俊乂密勿，多士寔寧，晉楚更霸，趙魏困橫，<br>假途滅虢，踐土會盟，何遵約法，韓弊煩刑，起翦頗牧，用軍最精，<br>宣威沙漠，馳譽丹青，九州禹跡，百郡秦并，岳宗泰岱，禪主雲亭，<br>雁門紫塞，雞田赤城，昆池碣石，巨野洞庭，曠遠綿邈，岩岫杳冥，<br>治本於農，務資稼穡，俶載南畝，我藝黍稷，稅熟貢新，勸賞黜陟，<br>孟軻敦素，史魚秉直，庶幾中庸，勞謙謹敕，聆音察理，鑒貌辨色，<br>貽厥嘉猷，勉其祗植，省躬譏誡，寵增抗極，殆辱近恥，林皋幸即，<br>兩疏見機，解組誰逼，索居閒處，沉默寂寥，求古尋論，散慮逍遙，<br>欣奏累遣，戚謝歡招，渠荷的歷，園莽抽條，枇杷晚翠，梧桐蚤凋，<br>陳根委翳，落葉飄搖，游鶤獨運，凌摩絳霄，耽讀玩市，寓目囊箱，<br>易輶攸畏，屬耳垣牆，具膳餐飯，適口充腸，飽飫烹宰，饑厭糟糠，<br>親戚故舊，老少異糧，妾御績紡，侍巾帷房，紈扇圓絜，銀燭煒煌，<br>晝眠夕寐，藍筍象床，弦歌酒宴，接杯舉觴，矯手頓足，悅豫且康，<br>嫡後嗣續，祭祀烝嘗，稽顙再拜，悚懼恐惶，箋牒簡要，顧答審詳，<br>骸垢想浴，執熱願涼，驢騾犢特，駭躍超驤，誅斬賊盜，捕獲叛亡，<br>布射僚丸，嵇琴阮嘯，恬筆倫紙，鈞巧任釣，釋紛利俗，並皆佳妙，<br>毛施淑姿，工顰妍笑，年矢每催，曦暉朗曜，璇璣懸斡，晦魄環照，<br>指薪修祜，永綏吉劭，矩步引領，俯仰廊廟，束帶矜莊，徘徊瞻眺，<br>孤陋寡聞，愚蒙等誚，謂語助者，焉哉乎也。</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote><p>天地玄黄，宇宙洪荒</p></blockquote><p>千字文首句，千字文原本只是王羲之一千个不同的字体，用来练习书法的，后来被周兴嗣编成了文章，真是鬼才，中国文人在带着镣铐跳舞这件事上一直很有天赋，还有璇玑图，施氏食狮史等例子，更普遍的还有诗词赋，对联等等，显然有些人注意到我们广大群众喜欢玩文字游戏，主动为群众们加上增加许多规则，增加生活趣味，确实是很有意思，还有些人嫌不够得劲，自行设置了更多规则，省事不少，妙哉妙哉。今日千字文也常用于字体样例，由于其各不相同，甚至可以按顺序当编号用，当然作为文章，千字文也有其文学性。</p><blockquote><p>The quick brown fox jumps over the lazy dog.</p></blockquote><p>快狐跨懒狗，最出名的全字母句，最早可考出处是 1885 年 2 月 9 日的 The Boston Journal（原句以 A 开头），常用于测试打字机，打印机，字体，键盘等等。虽然还有更短的全字母句，甚至有完美的全字母句，但显然这句词汇简单，朗朗上口，独树一帜。</p><blockquote><p>いろはにほへと ちりぬるを<br>わかよたれそ つねならむ<br>うゐのおくやま けふこえて<br>あさきゆめみし ゑひもせす</p></blockquote><p>日文的全字母句，称为伊吕波歌，可谓低配千字文，作者不可考，<a href="https://zhuanlan.zhihu.com/p/44910712" target="_blank" rel="noopener">一中译</a> 如下：</p><blockquote><p>花虽芬芳终须落<br>此世岂谁可常留<br>有为山深今日越<br>不恋醉梦免蹉跎</p></blockquote><p>那中文呢？一说中文的全字母句是「永」，这是把笔画当成字母算了。<br>目前《通用规范汉字表》共收字 8105 个，其中一级字表（常用字集）3500 个，二级字表 3000 个，三级字表 1605 个；收录汉字最多的字典《中华字海》共收汉字 85568 个；<a href="http://zisea.com" target="_blank" rel="noopener">字海</a> 收字 13.5 万；微软雅黑支持汉字 27775 个。<br>如果正常地把每个汉字算作字母，显然创作中文的全字母句既不现实也没有意义。虽然汉字这么多，但字体还是得设计（苦了字体设计师了），因此出现了以下句式作为替代品当作字体样例测试。</p><blockquote><p>永東國酬愛鬱靈鷹袋三力今</p></blockquote><p>汉字字体设计基本字型。</p><p>「永」传统永字八法的代表字；<br>「東」可以看到字框最阔距离；<br>「國」可以看到最大字面率、还有分中设定；<br>「酬」直划多、结构紧密，可以用来设计直划粗细；<br>「愛」取其中宫阔窄风格；<br>「鬱」取其结构、彡的造型设定；<br>「靈」是最多横划的字型，可以开始设定横划的粗度；<br>「鷹」可以看到字结构複杂、被压挤时如何变化；<br>「袋」取其上下分中比例，还有勾、衣字的设计；<br>「三」可以看到顶部、底部留有的空间多少；<br>「力」可以看到勾划—其中一个最难设计的部份设定如何，还有笔划少之下的空间处理设定；<br>「今」是中文少数的菱形字型，但其整体设定对结构十分重要。</p><blockquote><p>南去經三國，東來過五湖</p></blockquote><p>《字型散步》中的字型范例句，改自白居易的《东南行一百韵寄通州元九侍御澧州李十一》首句「南去经三楚，东来过五湖。」，相比「永東國酬」什么的更为优雅。</p><blockquote><p>我能吞下玻璃而不伤身体</p></blockquote><p>Ethan Mollick 在早期互联网上发起的语言学项目。该项目的目的是收集不同语言中「我能吞下玻璃而不伤身体」这句话的翻译，最初的中文翻译是「我克艺吃玻璃，我不毁受伤。」后来该项目成为了梗，并用于测试字符编码。</p><p>参考：</p><ul><li><a href="https://www.kufont.com/article/66" target="_blank" rel="noopener">关于“南去经三国，东来过五湖”</a></li><li><a href="https://www.zhihu.com/question/21232157" target="_blank" rel="noopener">哪些汉字比较适合用来评鉴一款中文字体的质量与设计水平？</a></li></ul><h3 id="emoji"><a href="#emoji" class="headerlink" title="emoji"></a>emoji</h3><p>我刚发现 Win10 按 <code>Win + .</code> 可以输入 emoji ✨，特殊符号 ¿ 甚至颜文字 (o゜▽゜)o☆…（顺便 Mac 上是 <code>⌃⌘⎵</code>）<br>目前各种平台对 emoji 的支持都越来越好了，但是国内大厂对 emoji 的支持好像还停留在上世纪，当然确实国人用更多的是表情包。</p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>测试一下代码块内的字体，主要是编程字体，还有代码着色主题。</p><ul><li><a href="https://app.programmingfonts.org" target="_blank" rel="noopener">Programming Fonts</a>：在线测试编程字体和着色主题，不过字体不全，而且只提供了 JavaScript 的样例代码。</li><li><a href="https://highlightjs.org/static/demo/" target="_blank" rel="noopener">hightlight.js</a>：这里可以找到更多语言的样例代码和着色主题。</li></ul><p>编程字体的个人选择：<br>Consolas：Win 用，完美，唯一意见是<code>*</code>不垂直居中。<br>Menlo：Mac 用，唯一意见是<code>l</code>看着重心不稳，这个的<code>*</code>的倒是居中了。<br>Source Code Pro：中规中矩，<code>0il</code>感觉很怪，但是免费开源，请注意 Consolas 和 Menlo 不开源也不免费。<br>Fira Code：重点是符号连字，适合装逼，<code>gr</code>感觉也很难看，免费开源。</p><p>函数是快速排序在 Swift 中的简单实现（只是我随手选的），效率并不高，更高效的算法可参考 <a href="https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Quicksort" target="_blank" rel="noopener">Swift 算法俱乐部</a>，当然 Swift 中最高效的是 <code>list.sort() { $0 &lt; $1 }</code>。</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>MD 的表格在源码里怎么写都不好看，虽然有插件可以对齐，不过有中文就怎么都对不齐了。</p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><img src="https://i.loli.net/2020/05/10/tE7UzVNqFYveWmx.jpg" width="50%" height="50%" loading="lazy"><p>著名的 Lena 图像是图像处理领域的标准图像，本身是《花花公子》插页图的截取图片。<br>详情可参考 <a href="https://www.zhihu.com/question/21748279" target="_blank" rel="noopener">为什么 Lena 的那张图会成为数字图像处理的标准图？</a></p><blockquote><p>采用这张图像的原因，除了因为它很赏心悦目外，就“测试标准”来说，它的鉴别度也相当的高。这张图像的确具备“测试标准”所应有的充分条件，平整的区块、清晰细致的纹路、渐渐变化的光影、颜色的深浅层次等，使它在验证影像处理演绎法则时，相当有成效。</p></blockquote><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li><a href="https://zh.wikipedia.org/wiki/Lorem_ipsum" target="_blank" rel="noopener">Lorem ipsum</a>：乱数假文，常用于排版设计。</li><li><a href="https://textgen.cqd.tw/" target="_blank" rel="noopener">中文假文產生器</a></li><li><a href="https://zh.wikipedia.org/wiki/Template:%E6%A0%87%E5%87%86%E6%B5%8B%E8%AF%95%E9%A1%B9%E7%9B%AE" target="_blank" rel="noopener">标准测试项目</a></li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本来只是测试下博客主题和 MD 语法，结果写成科普了。<br>你在屏幕上看到的每样东西，都凝聚了无数人的智慧和工作。<br>我个人并不想表达什么，只是，「我很好奇！」</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;天地玄黄，宇宙洪荒&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1234567
      
    
    </summary>
    
    
      <category term="极客" scheme="https://cf1.me/categories/%E6%9E%81%E5%AE%A2/"/>
    
    
      <category term="博客" scheme="https://cf1.me/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>建站小结</title>
    <link href="https://cf1.me/site-building/"/>
    <id>https://cf1.me/site-building/</id>
    <published>2020-04-28T10:30:51.000Z</published>
    <updated>2020-09-23T02:18:55.009Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>简单记录下建站的过程吧。<br>一直念叨着建自己的博客，总算是建起来了，域名也是看了好久。<br>建站主要参考了 <a href="https://www.yunyoujun.cn" target="_blank" rel="noopener">云游君</a> 的 <a href="https://www.yunyoujun.cn/share/how-to-build-your-site" target="_blank" rel="noopener">教你如何从零开始搭建一个属于自己的网站</a>，还是挺新的教程，相当清晰明了，没有太啰嗦也没有太简略，有些教程只讲步骤不讲是什么就有点云里雾里，不过结果我还是走了一些弯路 orz。<br>建站前一直感觉建站应该还是蛮复杂的一件事（虽然教程都说很简单），看各种建站教程感觉都好长好长的，建完了发现还真挺简单的（当然也是 Hexo 比较简单）。</p><a id="more"></a><h2 id="为什么建站"><a href="#为什么建站" class="headerlink" title="为什么建站"></a>为什么建站</h2><blockquote><p>起来！不愿做奴隶的人们！</p></blockquote><h3 id="大环境"><a href="#大环境" class="headerlink" title="大环境"></a>大环境</h3><p>这个事情可能要从 2019 年 5 月 13 日说起，这天百度贴吧公告 2017 年之前的帖子全部隐藏，说是会恢复，时隔一年确实恢复了一小部分，但大部分还是没有恢复，估计要等到猴年马月了。再之前还有百度空间的事。<br>很多人喷百度，当然百度确实傻逼，但更根本的可能还是言论自由的问题，可能很多人没意识到，事实上国内网络根本没有地方可以自由谈论政治。我也不喜欢谈论政治，你以为我乐意吗，快快乐乐的玩游戏做游戏它不好吗，但是有些事情真的越来越离谱，不能再忍受。<br>国内大部分 UGC 平台也是越来越拉胯，贴吧，不谈了，天胡开局血崩收场；知乎，看个答案都要付钱了；简书，开始感觉还可以，界面也很舒服，后来就全是毒鸡汤流量号了，只剩这 <a href="http://jandan.net" target="_blank" rel="noopener">煎蛋</a> 还有些温度，虽然也在逐渐腐化。总之哪哪都不舒服，不如自己建站反抗一下，至少这里不会有<strong>相关法律法规和政策</strong>。</p><h3 id="个人"><a href="#个人" class="headerlink" title="个人"></a>个人</h3><p>个人来说也是想写点东西，分享点东西吧，而且作为程序员不弄个个人网站感觉没什么人权。自己的博客也能随心所欲，为所欲为。<br>博客技术也是日新月异了，然后也是这两年才看到大佬们各种花里胡哨拉满的博客，什么 live2D 都有了，感觉也是时代变了，不是以前那种个人博客都是平平无奇清汤白水的时代了，也想自己整一个。</p><h2 id="选择框架"><a href="#选择框架" class="headerlink" title="选择框架"></a>选择框架</h2><p>一番谷歌之后发现国内主流博客框架有 WordPress、Typecho、Hexo，还有些大佬自己整的博客框架，<a href="https://github.com/chanshiyucx/aurora" target="_blank" rel="noopener">Aurora</a>，<a href="https://2heng.xin/theme-sakura" target="_blank" rel="noopener">Sakura</a> 等等，还有用 <a href="https://github.com/lifesinger/blog/issues" target="_blank" rel="noopener">GitHub issues</a> 的骚操作的。简单介绍下主流框架吧。</p><p>WordPress，03 年的老古董了，由美国人 Matt Mullenweg 和英国人 Mike Little 共同开发，PHP + MySQL，动态，简单地说你得搞个服务器来运行 WordPress，比如 VPS，比较臃肿，但是社区也丰富。<br>Typecho，08 年？出现，<a href="https://typecho.org/about" target="_blank" rel="noopener">国人开发</a>，PHP + 各种数据库，相当于是轻量的 WordPress，后台也比较简洁，不过好像最近三年都没有更新了。<br>Hexo，12 年出现，作者是台湾的大学生 <a href="https://github.com/tommy351" target="_blank" rel="noopener">tommy351</a>，基于 Node，静态，静态的好处就是不用搞服务器了，整个托管平台就行，最常用的就是 GitHub page 了，坏处就是没有网页后台，写博客得自己本地写 MD 文件然后部署，然后换电脑的话还得装一套 Node + Git 环境。</p><p>光建站来说 Hexo 应该是最简单的，也是最便宜的，如果不弄域名等于是零成本，但是建完了开始运营会比动态的麻烦一点。<br>WordPress 我是直接 pass 了，个人还是倾向新的技术，然后就选了简单的 Hexo 试试水了。</p><h2 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h2><p>框架选完了还要选主题，当然大佬也可以自己搞主题了，像我这种懒比就选个顺眼的主题用用就行了，比如在 <a href="https://github.com/search?q=hexo+theme" target="_blank" rel="noopener">GitHub</a> 上找，或者看 <a href="https://easyhexo.com/2-Theme-use-and-config" target="_blank" rel="noopener">Easy Hexo</a>，<a href="https://hexo.io/themes" target="_blank" rel="noopener">Hexo 官网</a>，或者直接去看看大佬们的博客用的主题。本来也是想着自己的博客总得有点自己的东西吧，但想想博客本身只是手段，不是目的，就不多花精力了，前端我也基本不懂。</p><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>域名的学问就太多了，要注册的话，可以参考 <a href="https://www.zhihu.com/question/19551906" target="_blank" rel="noopener">知乎</a>，国内的话主要是阿里云和腾讯云的，国外就多了，<a href="https://www.namecheap.com" target="_blank" rel="noopener">namecheap</a>，<a href="https://www.namesilo.com" target="_blank" rel="noopener">namesilo</a> 等等，最好是用国外的注册商，不会把你域名封了，而且国内的顶级域名少很多。我的话用的是 <a href="https://www.dynadot.com" target="_blank" rel="noopener">dynadot</a>，网站很快，中文界面，域名也很多，想用的话注册账号的时候可以填我的推荐码：T6G6O8K6Z818O7v，说是消费 10 美元可以拿 5 美元。</p><p>如果你想了解域名是如何跟你的网站联系在一起的，可以参考 <a href="https://www.ruanyifeng.com/blog/2016/06/dns.html" target="_blank" rel="noopener">DNS 原理入门</a>。<br>如果你想了解为什么买一个没人用的域名要花钱，花的钱到谁手里了，可以参考 <a href="https://www.ruanyifeng.com/blog/2018/05/root-domain.html" target="_blank" rel="noopener">根域名的知识</a>。<br>如果你想了解有哪些顶级域名的话，可以参考 <a href="http://www.iana.org/domains/root/db" target="_blank" rel="noopener">全部顶级域名列表</a>，当然很多域名是不开放注册的。<br>通常心仪的域名 99% 已经被抢了，也没办法，都 2020 年了，域名要是实在选不出来，暂时不买也不影响建站，静态的用 xxx.github.io 就好，不是静态的就直接用 IP。</p><p>反正我最后是搞了个 <code>cf1.me</code>，比较短也很便宜，没什么特别的意思，就是云狐的英文 cloudfox 的首字母加个 1，当然有数字确实不是很好看，不说了，我 GithubID 更难看（早知道早点注册 Github 了）。<br>写本文的时候才发现 dynadot 最近搞 <a href="https://www.dynadot.com/resumeboost?utm_source=Search%20Domain%20Text&utm_medium=Resume%20Boost%20Even%20Flow&utm_campaign=Resume%20Boost%202020&drefid=148" target="_blank" rel="noopener">活动</a>，8 个顶级域名免费 1 年，又去白嫖了一个。<br>国内基本没有 dynadot 的资料（当然官方文档也挺全的，又有中文，应该没什么障碍），所以放下我的 DNS 配置，可以参考下，我配了一个 www 子域名跳转主域名的，好像还可以弄个邮箱跳转的，没研究出来。<br><img src="https://i.loli.net/2020/05/11/igBsPz7TSZRqJVt.png" alt="DNS配置" loading="lazy"><br>免费 SSL 也可以开下，开了就能用 HTTPS 了，GitHub 那边也要设置下。</p><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><p>具体过程我就不多写了，我是参考 <a href="https://www.yunyoujun.cn/share/how-to-build-your-site" target="_blank" rel="noopener">教你如何从零开始搭建一个属于自己的网站</a> 的反正，老老实实按着步骤来就好了，我不老实的所有操作都被证明是傻叉操作。<br>本人搭建平台是 Win10，当然 Mac 也没什么太大区别。<br>装 Node 的时候有一个选项让你装 Chocolatey（默认没有勾选），我以为可能有什么用就装了，其实并没有什么卵用。<br>然后后面 git 让我建一个 hexo 分支，我心说为什么要两个分支，直接 master 不就好了，就没有建 hexo 分支，然后建完了我才意识到 master 分支相当于是网站内容，hexo 分支就是你编辑用的，相当于你的后台，我全混在 master 分支就很不合适，搞得我又删了本地和远程仓库重新搞了一遍，当然也没花多久就是了。  </p><p>写新文章的话就 <code>hexo new &quot;标题&quot;</code>（其实就是新建个 MD 模板文件），然后在 <code>source/_post</code> 里写 MD 文件，文件名用中文也可以，只不过网址复制出来不太好看，而且好像不利 SEO。<br>文章写完之后就是部署跟推送源码。</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>部署就是更新你的网站，<code>hexo g -d</code> 就好了，有什么问题就先 <code>hexo clean</code>，部署也会更新你的 master 分支。<br>然后最好配置一下 GitHub 的 SSH Key，否则每次部署都要输入账号密码，具体可以参考 <a href="https://help.github.com/cn/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent" target="_blank" rel="noopener">GitHub 帮助</a>，配完了可以测试下。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com</code></pre><p>如果出现</p><pre class=" language-bash"><code class="language-bash">Are you sure you want to <span class="token keyword">continue</span> connecting <span class="token punctuation">(</span>yes/no/<span class="token punctuation">[</span>fingerprint<span class="token punctuation">]</span><span class="token punctuation">)</span>?</code></pre><p>输入 yes 就好了。<br>配置好之后还要修改 <code>_config.yml</code> 里的 repo 地址。</p><pre class=" language-yml"><code class="language-yml">deploy:type: gitrepo: https://github.com/xxx/xxx.github.io</code></pre><p>改为</p><pre class=" language-yml"><code class="language-yml">deploy:type: gitrepo: git@github.com:xxx/xxx.github.io.git</code></pre><h3 id="推送源码"><a href="#推送源码" class="headerlink" title="推送源码"></a>推送源码</h3><p>推送源码可以方便异地协作，也可以当做备份，也并不是必要步骤，如果你只用一台电脑，你不推送也不影响你的网站和后续运营。git 我很熟了所以也很轻松，如果对 git 不熟的话最好是装个 git 图形界面客户端，我是用的 <a href="https://git-fork.com" target="_blank" rel="noopener">Fork</a>，Win 和 Mac 都有，图形界面也能直观地帮你理解 git，当然你得清楚有些不常用的 git 操作在图形界面是没有的。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>就这篇文章就拖了我好几天，很怀疑自己的博客更新进度，而且连主题都还没配，想着写完这篇再配，要不然主题都看不到啥东西。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;简单记录下建站的过程吧。&lt;br&gt;一直念叨着建自己的博客，总算是建起来了，域名也是看了好久。&lt;br&gt;建站主要参考了 &lt;a href=&quot;https://www.yunyoujun.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;云游君&lt;/a&gt; 的 &lt;a href=&quot;https://www.yunyoujun.cn/share/how-to-build-your-site&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;教你如何从零开始搭建一个属于自己的网站&lt;/a&gt;，还是挺新的教程，相当清晰明了，没有太啰嗦也没有太简略，有些教程只讲步骤不讲是什么就有点云里雾里，不过结果我还是走了一些弯路 orz。&lt;br&gt;建站前一直感觉建站应该还是蛮复杂的一件事（虽然教程都说很简单），看各种建站教程感觉都好长好长的，建完了发现还真挺简单的（当然也是 Hexo 比较简单）。&lt;/p&gt;
    
    </summary>
    
    
      <category term="极客" scheme="https://cf1.me/categories/%E6%9E%81%E5%AE%A2/"/>
    
    
      <category term="博客" scheme="https://cf1.me/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
